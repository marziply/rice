#!/usr/bin/env python

from subprocess import run
from datetime import datetime, timedelta
from time import sleep
from sys import stdout
from typing import Callable

def future_time() -> datetime:
    return datetime.now() + timedelta(seconds = 10)

def cmd(args: list[str]) -> str:
    proc = run(args, capture_output = True)

    return proc.stdout.decode("utf-8").strip()

def libvirtd_status() -> str:
    return cmd(["systemctl", "is-active", "libvirtd.service"])

def virt_state(name: str) -> str:
    return cmd(["sudo", "virsh", "domstate", name])

def dev_count() -> int:
    proc = run(["bluetoothctl", "devices", "Connected"], capture_output = True)
    devs = proc.stdout.decode("utf-8").splitlines()

    return len(devs)

after: datetime = future_time()
state: dict[str, str | int] = dict()
renderers: dict[str, Callable[[], str | int]] = {
    "bluetooth": lambda: dev_count(),
    "bindows": lambda: virt_state("bindows"),
    "libvirtd": lambda: libvirtd_status()
}

while True:
    now: datetime = datetime.now()

    if now > after:
        after = future_time()

        for k in renderers:
            render = renderers[k]
            state[k] = render()

    for k in renderers:
        stdout.write(" [%s: %s]" % (k, state.get(k, "â§—")))

    stdout.write(" %s\n" % (now.strftime("%Y-%m-%d %H:%M:%S")))
    stdout.flush()

    sleep(1)
